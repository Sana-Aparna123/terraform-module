name: Workflow For Deploying Infra On AWS With Terraform
on:
  push:
    branches:
      - development
      - production
    paths-ignore:
      - 'Manual.yml'
      - 'ReadMe.md'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: "us-east-1"
  TERRAFORM_DESTROY: "YES"

jobs:
  terraform-initiate:
    if: ${{ vars.TERRAFORM_DESTROY == 'NO' }}
    name: 'Terraform Initialization'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Customer_Alpha
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9.8
      - name: Terraform Init, Format, Validate
        run: terraform init && terraform fmt && terraform validate
      - name: Creating Terraform Workspace
        run: |
          terraform workspace select dev || terraform workspace new dev
          terraform workspace select prod || terraform workspace new prod
          terraform workspace list

  terraform-plan:
    if: ${{ vars.TERRAFORM_DESTROY == 'NO' }}
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: terraform-initiate
    defaults:
      run:
        working-directory: ./Customer_Alpha
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9.8
      - name: Terraform Init, Format, Validate
        run: terraform init && terraform fmt && terraform validate
      - name: Print Branch Reference
        run: echo The Current Branch Is $GITHUB_REF
      - name: Terraform Plan
        if: env.TERRAFORM_DESTROY == 'NO'
        run: |
          if [ ${GITHUB_REF} == 'refs/heads/development' ]; then
            echo "Running Terraform Plan For Development Environment"
            terraform workspace select dev
            terraform plan --var-file=dev.tfvars
          else
            echo "Running Terraform Plan For Production Environment"
            terraform workspace select prod
            terraform plan --var-file=prod.tfvars
          fi

  terraform-apply:
    if: ${{ vars.TERRAFORM_DESTROY == 'NO' }}
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform-plan
    defaults:
      run:
        working-directory: ./Customer_Alpha
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9.8
      - name: Terraform Init, Format, Validate
        run: terraform init && terraform fmt && terraform validate
      - name: Print Branch Reference
        run: echo The Current Branch Is $GITHUB_REF
      - name: Terraform Apply
        if: env.TERRAFORM_DESTROY == 'NO'
        run: |
          if [ ${GITHUB_REF} == 'refs/heads/development' ]; then
            echo "Running Terraform Plan For Development Environment"
            terraform workspace select dev
            terraform apply --var-file=dev.tfvars --auto-approve
            terraform state list
          else
            echo "Running Terraform Plan For Production Environment"
            terraform workspace select prod
            terraform apply --var-file=prod.tfvars --auto-approve
            terraform state list
          fi

  terraform-destroy:
    if: ${{ vars.TERRAFORM_DESTROY == 'YES' }}
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Customer_Alpha
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9.8
      - name: Terraform Init, Format, Validate
        run: terraform init && terraform fmt && terraform validate
      - name: Print Branch Reference
        run: echo The Current Branch Is $GITHUB_REF
      - name: Terraform Destroy
        if: env.TERRAFORM_DESTROY == 'YES'
        run: |
          if [ ${GITHUB_REF} == 'refs/heads/development' ]; then
            echo "Running Terraform Plan For Development Environment"
            terraform workspace select dev
            terraform destroy --var-file=dev.tfvars --auto-approve
          else
            echo "Running Terraform Plan For Production Environment"
            terraform workspace select prod
            terraform destroy --var-file=prod.tfvars --auto-approve
          fi